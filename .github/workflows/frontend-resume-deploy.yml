name: Deploy Cloud Resume Website

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: AWS
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python for Lambda testing
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      # Step 3: Install dependencies for Lambda testing
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r infra/lambda/requirements.txt

      # Step 4: Run unit tests for Lambda function
      - name: Run Lambda unit tests
        run: |
          python -m pytest tests/
        env:
          AWS_ACCESS_KEY_ID: "testing"  # Mock AWS credentials
          AWS_SECRET_ACCESS_KEY: "testing"
          AWS_SECURITY_TOKEN: "testing"
          AWS_SESSION_TOKEN: "testing"
          AWS_DEFAULT_REGION: "us-east-1"  # Set the AWS region
          DYNAMODB_TABLE: "VisitorsTable"  # Use a mock table name for testing

      # Step 5: Sync website files to S3
      - name: Sync website to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --delete --exclude '.git/*' --size-only
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"
          SOURCE_DIR: "website"

      # Step 6: Invalidate CloudFront distribution
      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          PATHS: "/*"
          AWS_REGION: "us-east-1"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}